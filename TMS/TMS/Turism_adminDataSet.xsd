<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="Turism_adminDataSet" targetNamespace="http://tempuri.org/Turism_adminDataSet.xsd" xmlns:mstns="http://tempuri.org/Turism_adminDataSet.xsd" xmlns="http://tempuri.org/Turism_adminDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="Turism_adminConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="Turism_adminConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.TMS.Properties.Settings.GlobalReference.Default.Turism_adminConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Admin_TableAdapter" GeneratorDataComponentClassName="Admin_TableAdapter" Name="Admin_" UserDataComponentName="Admin_TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Turism_adminConnectionString (Settings)" DbObjectName="Turism_admin.dbo.Admin_" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Admin_] WHERE (([username] = @Original_username) AND ((@IsNull_Pasword = 1 AND [Pasword] IS NULL) OR ([Pasword] = @Original_Pasword)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_username" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="username" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Pasword" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Pasword" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Pasword" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Pasword" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Admin_] ([username], [Pasword]) VALUES (@username, @Pasword);
SELECT username, Pasword FROM Admin_ WHERE (username = @username)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@username" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Pasword" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Pasword" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT username, Pasword FROM dbo.Admin_</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Admin_] SET [username] = @username, [Pasword] = @Pasword WHERE (([username] = @Original_username) AND ((@IsNull_Pasword = 1 AND [Pasword] IS NULL) OR ([Pasword] = @Original_Pasword)));
SELECT username, Pasword FROM Admin_ WHERE (username = @username)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@username" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Pasword" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Pasword" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_username" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="username" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Pasword" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Pasword" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Pasword" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Pasword" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="username" DataSetColumn="username" />
              <Mapping SourceColumn="Pasword" DataSetColumn="Pasword" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="Turism_adminDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="Turism_adminDataSet" msprop:Generator_UserDSName="Turism_adminDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Admin_" msprop:Generator_TableClassName="Admin_DataTable" msprop:Generator_TableVarName="tableAdmin_" msprop:Generator_TablePropName="Admin_" msprop:Generator_RowDeletingName="Admin_RowDeleting" msprop:Generator_RowChangingName="Admin_RowChanging" msprop:Generator_RowEvHandlerName="Admin_RowChangeEventHandler" msprop:Generator_RowDeletedName="Admin_RowDeleted" msprop:Generator_UserTableName="Admin_" msprop:Generator_RowChangedName="Admin_RowChanged" msprop:Generator_RowEvArgName="Admin_RowChangeEvent" msprop:Generator_RowClassName="Admin_Row">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="username" msprop:Generator_ColumnVarNameInTable="columnusername" msprop:Generator_ColumnPropNameInRow="username" msprop:Generator_ColumnPropNameInTable="usernameColumn" msprop:Generator_UserColumnName="username">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Pasword" msprop:Generator_ColumnVarNameInTable="columnPasword" msprop:Generator_ColumnPropNameInRow="Pasword" msprop:Generator_ColumnPropNameInTable="PaswordColumn" msprop:Generator_UserColumnName="Pasword" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Admin_" />
      <xs:field xpath="mstns:username" />
    </xs:unique>
  </xs:element>
</xs:schema>